{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Switch,Route,Link}from'react-router-dom';import GameForm from'./GameForm';import GameList from'./GameList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[games,setGames]=useState([]);useEffect(()=>{fetchGames();},[]);//\nconst fetchGames=async()=>{try{const response=await fetch(//TODO: Set up API\n);const data=await response.json();setGames(data);}catch(error){console.error('Error fetching games:',error);}};const submitNewGame=async newGameDetails=>{try{const response=await fetch(//API URL Here\n{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newGameDetails)});const data=await response.json();console.log('New game added:',data);}catch(error){console.error('Error adding new game:',error);}};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Pickup Game App\"})}),/*#__PURE__*/_jsx(\"section\",{className:\"content\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/add-game\",children:/*#__PURE__*/_jsx(GameForm,{onSubmit:submitNewGame})}),/*#__PURE__*/_jsx(Route,{path:\"/\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"game-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Available Games\"}),/*#__PURE__*/_jsx(GameList,{games:games}),/*#__PURE__*/_jsx(Link,{to:\"/add-game\",children:/*#__PURE__*/_jsx(\"button\",{children:\"Add New Game\"})})]})})]})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","GameForm","GameList","jsx","_jsx","jsxs","_jsxs","App","games","setGames","fetchGames","response","fetch","data","json","error","console","submitNewGame","newGameDetails","method","headers","body","JSON","stringify","log","children","className","path","onSubmit","to"],"sources":["/Users/jonat/CapstoneProj/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport GameForm from './GameForm';\nimport GameList from './GameList';\n\nfunction App() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    fetchGames();\n  }, []);\n//\n  const fetchGames = async () => {\n    try {\n      const response = await fetch(//TODO: Set up API\n      );\n      const data = await response.json();\n      setGames(data);\n    } catch (error) {\n      console.error('Error fetching games:', error);\n    }\n  };\n\n  const submitNewGame = async (newGameDetails) => {\n    try {\n      const response = await fetch(//API URL Here\n       {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newGameDetails),\n      });\n      const data = await response.json();\n      console.log('New game added:', data);\n    } catch (error) {\n      console.error('Error adding new game:', error);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <header>\n          <h1>Pickup Game App</h1>\n        </header>\n\n        <section className=\"content\">\n          <Switch>\n            <Route path=\"/add-game\">\n              <GameForm onSubmit={submitNewGame} />\n            </Route>\n            <Route path=\"/\">\n              <div className=\"game-list\">\n                <h2>Available Games</h2>\n                <GameList games={games} />\n                <Link to=\"/add-game\">\n                  <button>Add New Game</button>\n                </Link>\n              </div>\n            </Route>\n          </Switch>\n        </section>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,IAAI,KAAQ,kBAAkB,CAC/E,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACde,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CACR;AACE,KAAM,CAAAA,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC;AAAA,CAC5B,CACD,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCL,QAAQ,CAACI,IAAI,CAAC,CAChB,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CAAC,CAED,KAAM,CAAAE,aAAa,CAAG,KAAO,CAAAC,cAAc,EAAK,CAC9C,GAAI,CACF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC;AAC5B,CACCO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,cAAc,CACrC,CAAC,CAAC,CACF,KAAM,CAAAL,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCE,OAAO,CAACQ,GAAG,CAAC,iBAAiB,CAAEX,IAAI,CAAC,CACtC,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAAC,CAED,mBACEX,IAAA,CAACP,MAAM,EAAA4B,QAAA,cACLnB,KAAA,QAAKoB,SAAS,CAAC,KAAK,CAAAD,QAAA,eAClBrB,IAAA,WAAAqB,QAAA,cACErB,IAAA,OAAAqB,QAAA,CAAI,iBAAe,CAAI,CAAC,CAClB,CAAC,cAETrB,IAAA,YAASsB,SAAS,CAAC,SAAS,CAAAD,QAAA,cAC1BnB,KAAA,CAACR,MAAM,EAAA2B,QAAA,eACLrB,IAAA,CAACL,KAAK,EAAC4B,IAAI,CAAC,WAAW,CAAAF,QAAA,cACrBrB,IAAA,CAACH,QAAQ,EAAC2B,QAAQ,CAAEX,aAAc,CAAE,CAAC,CAChC,CAAC,cACRb,IAAA,CAACL,KAAK,EAAC4B,IAAI,CAAC,GAAG,CAAAF,QAAA,cACbnB,KAAA,QAAKoB,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxBrB,IAAA,OAAAqB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBrB,IAAA,CAACF,QAAQ,EAACM,KAAK,CAAEA,KAAM,CAAE,CAAC,cAC1BJ,IAAA,CAACJ,IAAI,EAAC6B,EAAE,CAAC,WAAW,CAAAJ,QAAA,cAClBrB,IAAA,WAAAqB,QAAA,CAAQ,cAAY,CAAQ,CAAC,CACzB,CAAC,EACJ,CAAC,CACD,CAAC,EACF,CAAC,CACF,CAAC,EACP,CAAC,CACA,CAAC,CAEb,CAEA,cAAe,CAAAlB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}